// Generated by Haxe 4.0.5

#pragma warning disable 109, 114, 219, 429, 168, 162
public class OPERATOR : global::haxe.lang.Enum {
	
	protected OPERATOR(int index) : base(index) {
	}
	
	
	public static readonly global::OPERATOR GT = new global::OPERATOR_GT();
	
	public static readonly global::OPERATOR GTE = new global::OPERATOR_GTE();
	
	public static readonly global::OPERATOR LT = new global::OPERATOR_LT();
	
	public static readonly global::OPERATOR LTE = new global::OPERATOR_LTE();
	
	public static readonly global::OPERATOR EQ = new global::OPERATOR_EQ();
	
	public static readonly global::OPERATOR NEQ = new global::OPERATOR_NEQ();
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class OPERATOR_GT : global::OPERATOR {
	
	public OPERATOR_GT() : base(0) {
	}
	
	
	public override string getTag() {
		return "GT";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class OPERATOR_GTE : global::OPERATOR {
	
	public OPERATOR_GTE() : base(1) {
	}
	
	
	public override string getTag() {
		return "GTE";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class OPERATOR_LT : global::OPERATOR {
	
	public OPERATOR_LT() : base(2) {
	}
	
	
	public override string getTag() {
		return "LT";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class OPERATOR_LTE : global::OPERATOR {
	
	public OPERATOR_LTE() : base(3) {
	}
	
	
	public override string getTag() {
		return "LTE";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class OPERATOR_EQ : global::OPERATOR {
	
	public OPERATOR_EQ() : base(4) {
	}
	
	
	public override string getTag() {
		return "EQ";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class OPERATOR_NEQ : global::OPERATOR {
	
	public OPERATOR_NEQ() : base(5) {
	}
	
	
	public override string getTag() {
		return "NEQ";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class ConditionResult : global::haxe.lang.HxObject {
	
	public ConditionResult(global::haxe.lang.EmptyObject empty) {
	}
	
	
	public ConditionResult(global::Condition con, bool res) {
		global::ConditionResult.__hx_ctor__ConditionResult(this, con, res);
	}
	
	
	protected static void __hx_ctor__ConditionResult(global::ConditionResult __hx_this, global::Condition con, bool res) {
		__hx_this.condition = con;
		__hx_this.matches = res;
		__hx_this.reason = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(con.fact, " should be "), global::Std.@string(con.op)), " "), global::Std.@string(con.@value));
	}
	
	
	public global::Condition condition;
	
	public bool matches;
	
	public string reason;
	
	public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
		unchecked {
			switch (hash) {
				case 2090667972:
				{
					this.reason = global::haxe.lang.Runtime.toString(@value);
					return @value;
				}
				
				
				case 159137011:
				{
					this.matches = global::haxe.lang.Runtime.toBool(@value);
					return @value;
				}
				
				
				case 2083776923:
				{
					this.condition = ((global::Condition) (@value) );
					return @value;
				}
				
				
				default:
				{
					return base.__hx_setField(field, hash, @value, handleProperties);
				}
				
			}
			
		}
	}
	
	
	public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
		unchecked {
			switch (hash) {
				case 2090667972:
				{
					return this.reason;
				}
				
				
				case 159137011:
				{
					return this.matches;
				}
				
				
				case 2083776923:
				{
					return this.condition;
				}
				
				
				default:
				{
					return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
				}
				
			}
			
		}
	}
	
	
	public override void __hx_getFields(global::Array<string> baseArr) {
		baseArr.push("reason");
		baseArr.push("matches");
		baseArr.push("condition");
		base.__hx_getFields(baseArr);
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class Condition : global::haxe.lang.HxObject {
	
	public Condition(global::haxe.lang.EmptyObject empty) {
	}
	
	
	public Condition() {
		global::Condition.__hx_ctor__Condition(this);
	}
	
	
	protected static void __hx_ctor__Condition(global::Condition __hx_this) {
		__hx_this.@value = null;
		__hx_this.op = global::OPERATOR.EQ;
		__hx_this.fact = "";
		{
		}
		
	}
	
	
	public string fact;
	
	public global::OPERATOR op;
	
	public object @value;
	
	public virtual bool matches(global::Blackboard bb) {
		unchecked {
			object val = ((object) (global::haxe.lang.Runtime.callField(((global::haxe.ds.StringMap) (((object) (((global::haxe.IMap) (((object) (bb.facts) )) )) )) ), "get", 5144726, new object[]{this.fact})) );
			switch (this.op._hx_index) {
				case 0:
				{
					return ( global::haxe.lang.Runtime.compare(val, this.@value) > 0 );
				}
				
				
				case 1:
				{
					return ( global::haxe.lang.Runtime.compare(val, this.@value) >= 0 );
				}
				
				
				case 2:
				{
					return ( global::haxe.lang.Runtime.compare(val, this.@value) < 0 );
				}
				
				
				case 3:
				{
					return ( global::haxe.lang.Runtime.compare(val, this.@value) <= 0 );
				}
				
				
				case 4:
				{
					return global::haxe.lang.Runtime.eq(val, this.@value);
				}
				
				
				case 5:
				{
					return ( ! (global::haxe.lang.Runtime.eq(val, this.@value)) );
				}
				
				
			}
			
			return default(bool);
		}
	}
	
	
	public virtual global::ConditionResult result(global::Blackboard bb) {
		return new global::ConditionResult(this, this.matches(bb));
	}
	
	
	public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
		unchecked {
			switch (hash) {
				case 834174833:
				{
					this.@value = ((object) (@value) );
					return @value;
				}
				
				
				default:
				{
					return base.__hx_setField_f(field, hash, @value, handleProperties);
				}
				
			}
			
		}
	}
	
	
	public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
		unchecked {
			switch (hash) {
				case 834174833:
				{
					this.@value = ((object) (@value) );
					return @value;
				}
				
				
				case 24865:
				{
					this.op = ((global::OPERATOR) (@value) );
					return @value;
				}
				
				
				case 1135981740:
				{
					this.fact = global::haxe.lang.Runtime.toString(@value);
					return @value;
				}
				
				
				default:
				{
					return base.__hx_setField(field, hash, @value, handleProperties);
				}
				
			}
			
		}
	}
	
	
	public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
		unchecked {
			switch (hash) {
				case 142895325:
				{
					return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "result", 142895325)) );
				}
				
				
				case 159137011:
				{
					return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "matches", 159137011)) );
				}
				
				
				case 834174833:
				{
					return this.@value;
				}
				
				
				case 24865:
				{
					return this.op;
				}
				
				
				case 1135981740:
				{
					return this.fact;
				}
				
				
				default:
				{
					return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
				}
				
			}
			
		}
	}
	
	
	public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
		unchecked {
			switch (hash) {
				case 834174833:
				{
					return ((double) (global::haxe.lang.Runtime.toDouble(this.@value)) );
				}
				
				
				default:
				{
					return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
				}
				
			}
			
		}
	}
	
	
	public override object __hx_invokeField(string field, int hash, object[] dynargs) {
		unchecked {
			switch (hash) {
				case 142895325:
				{
					return this.result(((global::Blackboard) (dynargs[0]) ));
				}
				
				
				case 159137011:
				{
					return this.matches(((global::Blackboard) (dynargs[0]) ));
				}
				
				
				default:
				{
					return base.__hx_invokeField(field, hash, dynargs);
				}
				
			}
			
		}
	}
	
	
	public override void __hx_getFields(global::Array<string> baseArr) {
		baseArr.push("value");
		baseArr.push("op");
		baseArr.push("fact");
		base.__hx_getFields(baseArr);
	}
	
	
}


